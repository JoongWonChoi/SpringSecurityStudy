<<SpringSecurity + JWT study>>

스프링 시큐리티 : 스프링 기반의 애플리케이션의 보안을 담당하는 스프링 하위 프레임워크.
인증과 인가를 책임 진다.
인증(Authenticate) ==> 누구인지
인가(Authorize) ==> 무엇을 할 수 있는지.

SpringSecurity는 기본적으로 제공되는 Filter chain들이 있다. 이는 debug=true로 확인 가능.
또한 기본적으로 제공하는 필터들 이외에 다양한 필턷르이 존재하며, java클래스로 Security에 관한 Configuration을 설정하여 추가할 수 있다.
=============================================
필터란 클라이언트 요청이 서블릿으로 각 ㅣ이전에 먼저 처리할 수 있도록 톰캣(WAS)에서 지원해주는 기능. 그렇다면 이런 필터가 왜 존재할까?
말 그대로 본 목적 이전에 필터는 걸러주는 기능이다.
따라서 브라우저에서 서버로 넘어오는 클라이언트의 요청을 검증하고 필요에 따라 다양한 처리를 하기 위한 목적이다.
스프링 시큐리티의 인터셉터는 보안의 목적이기에, 특정 URL접근에 대한 요청에 앞서 인증,인가,권한에 대한 필터링을 해주는 셈이다.
==============================================
*servlet : 자바를 사용하여 웹페이즈를 동적으로 생성하는 서버측 프로그램
한마디로 자바를 사용하여 웹을 만들기 위해 필요한 기술.

@EnableWebSecurity는 웹 보안을 활성화해주는 역할.
하지만 이 자체로는 유용하지 않고, 
스프링 시큐리티가 WebSecurityConfigurer를 구현하거나
컨텍스트의 WebSecurityConfigurerAdapter를 확장한 빈으로 설정되어있어야함.
후자처럼 확장하여 클래스 설정하는 것이 일반적

**HttpSecurity가 스프링 시큐리티의 거의 모든 설정을 담당. WebSecurity와 혼동하면 안됨.
[HttpSecurity 설정]
-리소스(URL)접근 권한 설정
==>antMatchers(), permitAll()<->authenticated()
, hasAnyRole(), anyRequest() .. . . .
-인증 전체 흐름에 필요한 로그인, 로그아웃 페이지 인증 완료 후 인증 실패 시 
이동 페이지 설정 등
-인증 로직을 커스텀하기위한 커스텀 필터 설정
-기타 csrf, 강제http호출 등등 거의 모든 스프링 시큐르티 설정
[[antMathcers( ) // 특정한 경로를 지정하여 조건 설정]
---인증이 완료되면 가능 / 특정 인증이 완료되어도 특정 속성에 해당하여야지 인가 / 인증 없이 어떠한 요청이든 모두 허가 / .. 등등의 경우가 있다. 

==============================================
특정 URL주소에 대하여 보안처리하기(인증)
@EnabledGlobalMethodSecurity(securedEnabled=true, prePostEnabled = true) 등의 옵션을 추가하여 보안 옵션 설정 가능..

@Secured("~~")